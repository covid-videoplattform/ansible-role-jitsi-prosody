---
# tasks file for ansible-role-jitsi-prosody

- name: install base packages
  apt:
      pkg:
      - ufw
      - bmon
      - htop
      - vim
      - prosody

- name: configure firewall rules
  ufw:
      rule: "{{ item.rule }}"
      port: "{{ item.port }}"
      proto: "{{ item.proto }}"
  with_items:
      - { rule: 'allow', port: '22', proto: 'tcp' }
      - { rule: 'allow', port: '5222', proto: 'tcp' }
      - { rule: 'allow', port: '5280', proto: 'tcp' }
      - { rule: 'allow', port: '5347', proto: 'tcp' }

- name: set logging
  ufw:
    logging: 'off'

- name: set ufw policy
  ufw:
    state: enabled
    policy: deny

- name: prosody config
  template:
    src: prosody.cfg.lua.j2
    dest: /etc/prosody/prosody.cfg.lua

- name: prosody jitsi host config
  template:
    src: prosody-host.cfg.lua.j2
    dest: /etc/prosody/conf.d/{{jitsi_domain}}.cfg.lua

- name: generate certificate
  command: prosodyctl cert generate {{jitsi_domain}}
  args:
    creates: /var/lib/prosody/{{ jitsi_domain }}.crt

- name: generate auth certificate
  command: prosodyctl cert generate auth.{{jitsi_domain}}
  args:
    creates: /var/lib/prosody/auth.{{ jitsi_domain }}.crt

- name: add gpg key for jitsi repo
  apt_key:
      url: https://download.jitsi.org/jitsi-key.gpg.key
      state: present

- name: add jitsi-meet stable apt repo
  apt_repository:
      repo: deb https://download.jitsi.org unstable/
      state: present

- name: install jitsi-meet-prosody package
  apt:
      name: jitsi-meet-prosody
      state: present

- name: enable prosody service
  systemd:
      name: prosody
      enabled: yes

- name: restart prosody service
  systemd:
      name: prosody
      state: restarted

- name: create focus user
  command: prosodyctl register focus "auth.{{jitsi_domain}}" "{{jicofo_auth_password}}"

- name: create jvb user
  command: prosodyctl register jvb "auth.{{jitsi_domain}}" "{{jvb_secret}}"
