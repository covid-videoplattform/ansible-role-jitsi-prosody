plugin_paths = { "/usr/share/jitsi-meet/prosody-plugins/" }

-- domain mapper options, must at least have domain base set to use the mapper
muc_mapper_domain_base = "{{ jitsi_domain }}";

turncredentials_secret = "{{turncredentials_secret}}";

turncredentials = {
    { type = "stun", host = "{{ turn_host }}", port = "443" },
    { type = "turn", host = "{{ turn_host }}", port = "443", transport = "udp" },
    { type = "turns", host = "{{ turn_host }}", port = "443", transport = "tcp" }
};

cross_domain_bosh = false;
consider_bosh_secure = true;

VirtualHost "{{ jitsi_domain }}"
    -- enabled = false -- Remove this line to enable this host
    authentication = "anonymous"
    -- Properties below are modified by jitsi-meet-tokens package config
    -- and authentication above is switched to "token"
    --app_id="example_app_id"
    --app_secret="example_app_secret"
    -- Assign this host a certificate for TLS, otherwise it would use the one
    -- set in the global section (if any).
    -- Note that old-style SSL on port 5223 only supports one certificate, and will always
    -- use the global one.
    ssl = {
        key = "/var/lib/prosody/{{ jitsi_domain }}.key";
        certificate = "/var/lib/prosody/{{ jitsi_domain }}.crt";
    }
    speakerstats_component = "{{ jitsi_speakerstats_domain }}"
    conference_duration_component = "{{ jitsi_conferenceduration_domain }}"
    -- we need bosh
    modules_enabled = {
        "bosh";
        "pubsub";
        "ping"; -- Enable mod_ping
        "speakerstats";
        "turncredentials";
        "conference_duration";
    }
    c2s_require_encryption = false

Component "{{ jitsi_conference_domain }}" "muc"
    storage = "memory"
    modules_enabled = {
        "muc_meeting_id";
        "muc_domain_mapper";
        --"token_verification";
    }
    admins = { "{{jicofo_auth_user}}@{{ jitsi_auth_domain }}" }
    muc_room_locking = false
    muc_room_default_public_jids = true

-- internal muc component
-- Note: This is also used from jibris
Component "{{ jitsi_internal_auth_domain }}" "muc"
    storage = "memory"
    modules_enabled = {
        "ping";
    }
    admins = { "{{jicofo_auth_user}}@{{ jitsi_auth_domain }}", "{{jvb_auth_user}}@{{ jitsi_auth_domain }}" }

VirtualHost "{{ jitsi_auth_domain }}"
    ssl = {
        key = "/var/lib/prosody/{{ jitsi_auth_domain }}.key";
        certificate = "/var/lib/prosody/{{ jitsi_auth_domain }}.crt";
    }
    --authentication = "internal_hashed"
    authentication = "internal_plain"

Component "{{ jitsi_focus_domain }}" "client_proxy"
    target_address = "{{ jicofo_auth_user }}@{{ jitsi_auth_domain }}"

Component "{{ jitsi_speakerstats_domain }}" "speakerstats_component"
    muc_component = "{{ jitsi_conference_domain }}"

Component "{{ jitsi_conferenceduration_domain }}" "conference_duration_component"
    muc_component = "{{ jitsi_conference_domain }}"

-- for Jibri
VirtualHost "{{ jitsi_recorder_domain }}"
    modules_enabled = {
        "ping";
    }
    authentication = "internal_hashed"
    c2s_require_encryption = false
